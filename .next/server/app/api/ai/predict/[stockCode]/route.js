/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ai/predict/[stockCode]/route";
exports.ids = ["app/api/ai/predict/[stockCode]/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&page=%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute.ts&appDir=C%3A%5CCoding%5Cai_trader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CCoding%5Cai_trader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&page=%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute.ts&appDir=C%3A%5CCoding%5Cai_trader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CCoding%5Cai_trader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Coding_ai_trader_src_app_api_ai_predict_stockCode_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/ai/predict/[stockCode]/route.ts */ \"(rsc)/./src/app/api/ai/predict/[stockCode]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ai/predict/[stockCode]/route\",\n        pathname: \"/api/ai/predict/[stockCode]\",\n        filename: \"route\",\n        bundlePath: \"app/api/ai/predict/[stockCode]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Coding\\\\ai_trader\\\\src\\\\app\\\\api\\\\ai\\\\predict\\\\[stockCode]\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Coding_ai_trader_src_app_api_ai_predict_stockCode_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZhaSUyRnByZWRpY3QlMkYlNUJzdG9ja0NvZGUlNUQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFpJTJGcHJlZGljdCUyRiU1QnN0b2NrQ29kZSU1RCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFpJTJGcHJlZGljdCUyRiU1QnN0b2NrQ29kZSU1RCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDQ29kaW5nJTVDYWlfdHJhZGVyJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDQ29kaW5nJTVDYWlfdHJhZGVyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUN3QjtBQUNyRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcQ29kaW5nXFxcXGFpX3RyYWRlclxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxhaVxcXFxwcmVkaWN0XFxcXFtzdG9ja0NvZGVdXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9haS9wcmVkaWN0L1tzdG9ja0NvZGVdL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWkvcHJlZGljdC9bc3RvY2tDb2RlXVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWkvcHJlZGljdC9bc3RvY2tDb2RlXS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXENvZGluZ1xcXFxhaV90cmFkZXJcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYWlcXFxccHJlZGljdFxcXFxbc3RvY2tDb2RlXVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&page=%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute.ts&appDir=C%3A%5CCoding%5Cai_trader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CCoding%5Cai_trader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/ai/predict/[stockCode]/route.ts":
/*!*****************************************************!*\
  !*** ./src/app/api/ai/predict/[stockCode]/route.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_korea_investment_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/korea-investment/client */ \"(rsc)/./src/lib/korea-investment/client.ts\");\n\n\nasync function GET(_request, context) {\n    try {\n        const { stockCode } = await context.params;\n        const stock = _lib_korea_investment_client__WEBPACK_IMPORTED_MODULE_1__.MAJOR_STOCKS.find((s)=>s.code === stockCode);\n        if (!stock) throw new Error('Stock not found');\n        // 종목별 특성을 반영한 예측 데이터 생성\n        const basePrice = stock.currentPrice || 50000;\n        const volatility = Math.random() * 0.1; // 10% 이내의 변동성\n        const trend = Math.random() > 0.5 ? 'upward' : 'downward';\n        const predictedChange = basePrice * volatility * (trend === 'upward' ? 1 : -1);\n        const mockPrediction = {\n            predictedPrice: Math.round(basePrice + predictedChange),\n            confidenceScore: 0.7 + Math.random() * 0.2,\n            trend,\n            supportLevel: Math.round(basePrice * 0.95),\n            resistanceLevel: Math.round(basePrice * 1.05),\n            shortTermForecast: trend === 'upward' ? '상승 추세' : '하락 추세',\n            technicalSignals: {\n                rsi: Math.round(40 + Math.random() * 30),\n                macd: trend === 'upward' ? 'bullish' : 'bearish',\n                bollingerBand: [\n                    'upper',\n                    'middle',\n                    'lower'\n                ][Math.floor(Math.random() * 3)]\n            },\n            analysisFactors: {\n                technical: {\n                    description: \"기술적 분석 요인\",\n                    factors: [\n                        {\n                            name: \"이동평균선\",\n                            status: trend === 'upward' ? \"골든크로스 형성\" : \"데드크로스 형성\",\n                            impact: trend === 'upward' ? \"강한 매수신호\" : \"강한 매도신호\"\n                        },\n                        {\n                            name: \"거래량\",\n                            status: `전일 대비 ${Math.round(Math.random() * 100)}% 증가`,\n                            impact: \"시장 관심도 상승\"\n                        }\n                    ]\n                },\n                fundamental: {\n                    description: \"기본적 분석 요인\",\n                    factors: [\n                        {\n                            name: \"시장 점유율\",\n                            status: `업계 ${Math.floor(Math.random() * 3 + 1)}위`,\n                            impact: \"안정적인 시장 지위\"\n                        },\n                        {\n                            name: \"실적 전망\",\n                            status: `전년 대비 영업이익 ${Math.round(Math.random() * 20)}% 성장 예상`,\n                            impact: \"긍정적 실적 모멘텀\"\n                        }\n                    ]\n                },\n                market: {\n                    description: \"시장 환경 요인\",\n                    factors: [\n                        {\n                            name: \"산업 동향\",\n                            status: stock.sector + \" 산업 성장세\",\n                            impact: \"긍정적 산업 영향\"\n                        },\n                        {\n                            name: \"시장 심리\",\n                            status: trend === 'upward' ? \"낙관적\" : \"보수적\",\n                            impact: trend === 'upward' ? \"매수세 유입 가능\" : \"관망세 지속\"\n                        }\n                    ]\n                }\n            }\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            stockCode,\n            prediction: mockPrediction\n        });\n    } catch (error) {\n        console.error('Prediction error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to generate prediction'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/ai/predict/[stockCode]/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/korea-investment/client.ts":
/*!********************************************!*\
  !*** ./src/lib/korea-investment/client.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAJOR_STOCKS: () => (/* binding */ MAJOR_STOCKS),\n/* harmony export */   getAccessToken: () => (/* binding */ getAccessToken),\n/* harmony export */   getInitialStockList: () => (/* binding */ getInitialStockList),\n/* harmony export */   getKospiStockList: () => (/* binding */ getKospiStockList),\n/* harmony export */   getKospiStocks: () => (/* binding */ getKospiStocks),\n/* harmony export */   getStockChart: () => (/* binding */ getStockChart),\n/* harmony export */   getStockPricesFromDB: () => (/* binding */ getStockPricesFromDB),\n/* harmony export */   updateAllStockPrices: () => (/* binding */ updateAllStockPrices),\n/* harmony export */   updateStockPriceInDB: () => (/* binding */ updateStockPriceInDB)\n/* harmony export */ });\n/* harmony import */ var _types_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/error */ \"(rsc)/./src/types/error.ts\");\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase/client */ \"(rsc)/./src/lib/supabase/client.ts\");\n\n\nconst BASE_URL = 'https://openapi.koreainvestment.com:9443';\n// 토큰 캐싱을 위한 전역 변수\nlet cachedToken = null;\nlet tokenExpiry = null;\nlet tokenRequestPromise = null; // 동시 요청 방지용\n// 주요 KOSPI 종목 리스트\nconst MAJOR_STOCKS = [\n    {\n        code: '005930',\n        name: '삼성전자',\n        sector: '전기전자'\n    },\n    {\n        code: '000660',\n        name: 'SK하이닉스',\n        sector: '전기전자'\n    },\n    {\n        code: '005935',\n        name: '삼성전자우',\n        sector: '전기전자'\n    },\n    {\n        code: '005380',\n        name: '현대차',\n        sector: '운수장비'\n    },\n    {\n        code: '035420',\n        name: 'NAVER',\n        sector: '서비스업'\n    },\n    {\n        code: '051910',\n        name: 'LG화학',\n        sector: '화학'\n    },\n    {\n        code: '005490',\n        name: 'POSCO홀딩스',\n        sector: '철강금속'\n    },\n    {\n        code: '035720',\n        name: '카카오',\n        sector: '서비스업'\n    },\n    {\n        code: '006400',\n        name: '삼성SDI',\n        sector: '전기전자'\n    },\n    {\n        code: '068270',\n        name: '셀트리온',\n        sector: '의약품'\n    },\n    {\n        code: '000270',\n        name: '기아',\n        sector: '운수장비'\n    },\n    {\n        code: '105560',\n        name: 'KB금융',\n        sector: '금융업'\n    },\n    {\n        code: '055550',\n        name: '신한지주',\n        sector: '금융업'\n    },\n    {\n        code: '002630',\n        name: '오리엔트바이오',\n        sector: '의약품'\n    },\n    {\n        code: '096770',\n        name: 'SK이노베이션',\n        sector: '화학'\n    }\n];\n// 시가총액 상위 종목만 먼저 반환하는 함수\nasync function getInitialStockList() {\n    return MAJOR_STOCKS.map((stock)=>({\n            mksc_shrn_iscd: stock.code,\n            hts_kor_isnm: stock.name,\n            bstp_cls_code: '',\n            bstp_kor_isnm: stock.sector\n        }));\n}\n// 전체 종목 리스트는 필요할 때만 호출\nasync function getKospiStockList() {\n    try {\n        // 먼저 주요 종목 반환\n        const majorStocks = await getInitialStockList();\n        // 전체 목록이 필요한 경우에만 API 호출\n        const token = await getAccessToken();\n        const url = new URL(`${BASE_URL}/uapi/domestic-stock/v1/quotations/kospi-quotations`);\n        url.searchParams.append('servicekey', \"PS1rVcaHoaeogJqwa19KaCneBYEw07bymPiX\");\n        const response = await fetch(url, {\n            headers: {\n                'content-type': 'application/json',\n                authorization: `Bearer ${token}`,\n                appkey: \"PS1rVcaHoaeogJqwa19KaCneBYEw07bymPiX\",\n                appsecret: \"q5NUDhtegTL+n8CgqmyTCB12orbBI0EljxtH3UJ7OkNzbh4vbPiEjqQCnnTAtxIqUWIvcDQZ9a667ygwDCHrBFroKYny3MkD/Y0J+H4qNZAYfwBIe3gxZqoNXi1lQ5TFVK22gK8wiMLQ2bznUfUMgdWqy0MpCcyJ2+3T5yoGRj4O4DfxsZI=\",\n                tr_id: 'HHDFS00000300',\n                custtype: 'P'\n            }\n        });\n        const data = await response.json();\n        if (!response.ok || data.rt_cd !== '0') {\n            console.error('KOSPI List API Error:', data);\n            // API 호출 실패시 주요 종목만이라도 반환\n            return majorStocks;\n        }\n        return [\n            ...majorStocks,\n            ...data.output || []\n        ];\n    } catch (error) {\n        console.error('Error fetching KOSPI list:', error);\n        // 에러 발생시 주요 종목만이라도 반환\n        return getInitialStockList();\n    }\n}\nasync function getValidTokenFromDB() {\n    try {\n        const { data, error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.rpc('get_valid_token');\n        if (error) throw error;\n        if (data && data.length > 0) {\n            return data[0].token;\n        }\n        return null;\n    } catch (error) {\n        console.error('Error getting token from DB:', error);\n        return null;\n    }\n}\nasync function saveTokenToDB(token, expiresIn) {\n    try {\n        const expiresAt = new Date(Date.now() + expiresIn * 1000);\n        const { error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('access_tokens').insert([\n            {\n                token,\n                expires_at: expiresAt.toISOString()\n            }\n        ]);\n        if (error) throw error;\n    } catch (error) {\n        console.error('Error saving token to DB:', error);\n    }\n}\nasync function getAccessToken() {\n    try {\n        // DB에서 유효한 토큰 확인\n        const cachedToken = await getValidTokenFromDB();\n        if (cachedToken) {\n            return cachedToken;\n        }\n        // 토큰 발급 요청 전 1초 대기\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        // 새 토큰 발급\n        const response = await fetch(`${BASE_URL}/oauth2/tokenP`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                grant_type: 'client_credentials',\n                appkey: \"PS1rVcaHoaeogJqwa19KaCneBYEw07bymPiX\",\n                appsecret: \"q5NUDhtegTL+n8CgqmyTCB12orbBI0EljxtH3UJ7OkNzbh4vbPiEjqQCnnTAtxIqUWIvcDQZ9a667ygwDCHrBFroKYny3MkD/Y0J+H4qNZAYfwBIe3gxZqoNXi1lQ5TFVK22gK8wiMLQ2bznUfUMgdWqy0MpCcyJ2+3T5yoGRj4O4DfxsZI=\"\n            })\n        });\n        const data = await response.json();\n        if (!response.ok || data.error_code) {\n            if (data.error_code === 'EGW00133') {\n                // 1분 대기 후 재시도\n                await new Promise((resolve)=>setTimeout(resolve, 60 * 1000));\n                return getAccessToken(); // 재귀적 재시도\n            }\n            throw new Error(data.error_description || 'Failed to get access token');\n        }\n        // 새 토큰을 DB에 저장\n        try {\n            await saveTokenToDB(data.access_token, data.expires_in);\n        } catch (error) {\n            console.error('Error saving token to DB:', error);\n        // DB 저장 실패해도 토큰은 반환\n        }\n        return data.access_token;\n    } catch (error) {\n        console.error('Error getting access token:', error);\n        throw error;\n    }\n}\nasync function getKospiStocks(stockCode) {\n    try {\n        const token = await getAccessToken();\n        const url = new URL(`${BASE_URL}/uapi/domestic-stock/v1/quotations/inquire-price`);\n        url.searchParams.append('FID_COND_MRKT_DIV_CODE', 'J');\n        url.searchParams.append('FID_INPUT_ISCD', stockCode);\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                authorization: `Bearer ${token}`,\n                appkey: \"PS1rVcaHoaeogJqwa19KaCneBYEw07bymPiX\",\n                appsecret: \"q5NUDhtegTL+n8CgqmyTCB12orbBI0EljxtH3UJ7OkNzbh4vbPiEjqQCnnTAtxIqUWIvcDQZ9a667ygwDCHrBFroKYny3MkD/Y0J+H4qNZAYfwBIe3gxZqoNXi1lQ5TFVK22gK8wiMLQ2bznUfUMgdWqy0MpCcyJ2+3T5yoGRj4O4DfxsZI=\",\n                tr_id: 'FHKST01010100',\n                custtype: 'P'\n            }\n        });\n        const data = await response.json();\n        if (!response.ok || data.rt_cd !== '0') {\n            console.error('Stock API Error:', data);\n            throw new _types_error__WEBPACK_IMPORTED_MODULE_0__.KoreaInvestmentError(data.msg1 || 'Failed to fetch stock data');\n        }\n        return data;\n    } catch (error) {\n        console.error('Error fetching stock data:', error);\n        throw error;\n    }\n}\nasync function getChartFromDB(stockCode, period) {\n    try {\n        const { data, error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('stock_charts').select('chart_data').eq('stock_code', stockCode).eq('period', period).gt('updated_at', new Date(Date.now() - 1000 * 60 * 60).toISOString()) // 1시간 이내 데이터만\n        .single();\n        if (error) return null;\n        return data?.chart_data;\n    } catch (error) {\n        console.error('Error getting chart from DB:', error);\n        return null;\n    }\n}\nasync function saveChartToDB(stockCode, period, chartData) {\n    try {\n        const { error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('stock_charts').upsert({\n            stock_code: stockCode,\n            period: period,\n            chart_data: chartData,\n            updated_at: new Date().toISOString()\n        }, {\n            onConflict: 'stock_code_period'\n        });\n        if (error) throw error;\n    } catch (error) {\n        console.error('Error saving chart to DB:', error);\n    }\n}\nasync function getStockChart(stockCode, period = '1M') {\n    try {\n        const token = await getAccessToken();\n        const params = getPeriodParams(period, stockCode);\n        const url = new URL(`${BASE_URL}/uapi/domestic-stock/v1/quotations/inquire-daily-price`);\n        Object.entries(params).forEach(([key, value])=>{\n            url.searchParams.append(key, value.toString());\n        });\n        const response = await fetch(url.toString(), {\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `Bearer ${token}`,\n                'appkey': \"PS1rVcaHoaeogJqwa19KaCneBYEw07bymPiX\",\n                'appsecret': \"q5NUDhtegTL+n8CgqmyTCB12orbBI0EljxtH3UJ7OkNzbh4vbPiEjqQCnnTAtxIqUWIvcDQZ9a667ygwDCHrBFroKYny3MkD/Y0J+H4qNZAYfwBIe3gxZqoNXi1lQ5TFVK22gK8wiMLQ2bznUfUMgdWqy0MpCcyJ2+3T5yoGRj4O4DfxsZI=\",\n                'tr_id': 'FHKST01010400',\n                'custtype': 'P'\n            },\n            cache: 'no-store'\n        });\n        if (!response.ok) {\n            throw new Error(`API request failed: ${response.status}`);\n        }\n        const data = await response.json();\n        if (!data.output || !Array.isArray(data.output)) {\n            throw new Error('Invalid API response format');\n        }\n        return data.output.map((item)=>({\n                date: item.stck_bsop_date,\n                시가: parseFloat(item.stck_oprc),\n                고가: parseFloat(item.stck_hgpr),\n                저가: parseFloat(item.stck_lwpr),\n                종가: parseFloat(item.stck_clpr),\n                거래량: parseInt(item.acml_vol)\n            }));\n    } catch (error) {\n        console.error('Error fetching chart data:', error);\n        throw error;\n    }\n}\nfunction getPeriodParams(period, stockCode) {\n    const today = new Date();\n    let startDate = new Date();\n    switch(period){\n        case '1D':\n            startDate = new Date(today);\n            break;\n        case '1W':\n            startDate.setDate(today.getDate() - 7);\n            break;\n        case '1M':\n            startDate.setMonth(today.getMonth() - 1);\n            break;\n        case '3M':\n            startDate.setMonth(today.getMonth() - 3);\n            break;\n        case '6M':\n            startDate.setMonth(today.getMonth() - 6);\n            break;\n        case '1Y':\n            startDate.setFullYear(today.getFullYear() - 1);\n            break;\n        case '3Y':\n            startDate.setFullYear(today.getFullYear() - 3);\n            break;\n        case '5Y':\n            startDate.setFullYear(today.getFullYear() - 5);\n            break;\n        default:\n            startDate.setMonth(today.getMonth() - 1);\n    }\n    return {\n        FID_COND_MRKT_DIV_CODE: 'J',\n        FID_INPUT_ISCD: stockCode,\n        FID_PERIOD_DIV_CODE: 'D',\n        FID_ORG_ADJ_PRC: '1',\n        START_DT: startDate.toISOString().slice(0, 10).replace(/-/g, ''),\n        END_DT: today.toISOString().slice(0, 10).replace(/-/g, '')\n    };\n}\nasync function getStockPricesFromDB() {\n    try {\n        const { data, error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('stock_prices').select('*').order('code');\n        if (error) throw error;\n        return data || [];\n    } catch (error) {\n        console.error('Error fetching stock prices from DB:', error);\n        return [];\n    }\n}\nasync function updateStockPriceInDB(stockData) {\n    try {\n        const { error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('stock_prices').upsert({\n            code: stockData.code,\n            price: stockData.price,\n            change: stockData.change,\n            changeRate: stockData.changeRate,\n            volume: stockData.volume,\n            updated_at: new Date().toISOString()\n        }, {\n            onConflict: 'code'\n        });\n        if (error) throw error;\n    } catch (error) {\n        console.error('Error updating stock price in DB:', error);\n    }\n}\n// 백그라운드에서 주기적으로 가격 업데이트\nasync function updateAllStockPrices() {\n    for (const stock of MAJOR_STOCKS){\n        try {\n            const data = await getKospiStocks(stock.code);\n            if (data?.output) {\n                await updateStockPriceInDB({\n                    code: stock.code,\n                    price: parseInt(data.output.stck_prpr) || 0,\n                    change: parseInt(data.output.prdy_vrss) || 0,\n                    changeRate: parseFloat(data.output.prdy_ctrt) || 0,\n                    volume: parseInt(data.output.acml_vol) || 0\n                });\n            }\n            // API 호출 간 딜레이\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n        } catch (error) {\n            console.error(`Error updating price for ${stock.code}:`, error);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/korea-investment/client.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase/client.ts":
/*!************************************!*\
  !*** ./src/lib/supabase/client.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nif (false) {}\nif (false) {}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://uypvrugprpujbbaudtoi.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV5cHZydWdwcnB1amJiYXVkdG9pIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU2MTY1ODcsImV4cCI6MjA1MTE5MjU4N30.a471ztj9PPT9bAhmaDUHilsoC0CVk2o_ri2nsHxOSEs\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUVyRCxJQUFJLEtBQXFDLEVBQUUsRUFFMUM7QUFFRCxJQUFJLEtBQTBDLEVBQUUsRUFFL0M7QUFFTSxNQUFNTSxXQUFXTixtRUFBWUEsQ0FDbENDLDBDQUFvQyxFQUNwQ0Esa05BQXlDLEVBQ3pDIiwic291cmNlcyI6WyJDOlxcQ29kaW5nXFxhaV90cmFkZXJcXHNyY1xcbGliXFxzdXBhYmFzZVxcY2xpZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XHJcblxyXG5pZiAoIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCkge1xyXG4gIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBlbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMJyk7XHJcbn1cclxuXHJcbmlmICghcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZJyk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChcclxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwsXHJcbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcclxuKTsgIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJFcnJvciIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase/client.ts\n");

/***/ }),

/***/ "(rsc)/./src/types/error.ts":
/*!****************************!*\
  !*** ./src/types/error.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KoreaInvestmentError: () => (/* binding */ KoreaInvestmentError)\n/* harmony export */ });\nclass KoreaInvestmentError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'KoreaInvestmentError';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdHlwZXMvZXJyb3IudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLDZCQUE2QkM7SUFDeENDLFlBQVlDLE9BQWUsQ0FBRTtRQUMzQixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDZDtBQUNGIiwic291cmNlcyI6WyJDOlxcQ29kaW5nXFxhaV90cmFkZXJcXHNyY1xcdHlwZXNcXGVycm9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBLb3JlYUludmVzdG1lbnRFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgdGhpcy5uYW1lID0gJ0tvcmVhSW52ZXN0bWVudEVycm9yJztcclxuICB9XHJcbn0gIl0sIm5hbWVzIjpbIktvcmVhSW52ZXN0bWVudEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJuYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/types/error.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&page=%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fpredict%2F%5BstockCode%5D%2Froute.ts&appDir=C%3A%5CCoding%5Cai_trader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CCoding%5Cai_trader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();